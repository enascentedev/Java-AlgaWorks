## ----- ----- -----

Estudos: Java
Author: Emanuel
Módulo 10 - Construtores, pacotes e visibilidade

-- ----- ----- -----
10.01. Criando e chamando construtores

Em Java, os construtores são métodos especiais usados para inicializar objetos. Eles têm o mesmo nome da classe e não possuem tipo de retorno.
Para chamar um construtor, use a palavra-chave new seguida do nome da classe e dos argumentos, se houverem. Construtores podem ser
sobrecarregados, permitindo diferentes formas de inicialização para objetos da mesma classe.
Chamar um construtor em Java significa instanciar um objeto dessa classe, ou seja, criar uma nova instância da classe usando o construtor
correspondente

-- ----- ----- -----
10.02. Construtores com parâmetros

Construtores com parâmetros em Java são usados para inicializar objetos com valores específicos passados como argumentos durante a instanciação.
Eles permitem que você defina o estado inicial do objeto com base nos valores fornecidos, facilitando a personalização e reutilização do código.
Ao criar um construtor com parâmetros, você pode definir diferentes formas de inicialização para objetos da mesma classe, oferecendo
flexibilidade no uso da classe em diferentes contextos.

-- ----- ----- -----
10.03. Sobrecarga de construtores

A sobrecarga de construtores em Java permite ter múltiplos construtores com o mesmo nome, mas com diferentes listas de parâmetros. Isso facilita
oferecer diversas formas de inicialização para objetos da mesma classe, adaptando-se às necessidades específicas dos usuários. É útil para
personalizar a criação de objetos com diferentes conjuntos de valores.

-- ----- ----- -----
10.04. Boas práticas - valide os argumentos de construtores

Para configurar a memória Heap da JVM em Java, utilizam-se argumentos de linha de comando: -Xms para o tamanho inicial da Heap, -Xmx para
o tamanho máximo, e -XX:MinHeapFreeRatio e -XX:MaxHeapFreeRatio para gerenciar a proporção de Heap livre após a coleta de lixo. O tamanho
inicial e máximo da nova geração podem ser definidos com -XX:NewSize e -XX:MaxNewSize, respectivamente. A partir do Java 8, o PermGen foi
substituído por Metaspace, ajustável com -XX:MetaSpaceSize e -XX:MaxMetaSpaceSize. Estes ajustes são essenciais para otimizar o desempenho
da aplicação e evitar a exaustão da memória.

-- ----- ----- -----
10.05. Encadeamento de chamadas de construtores

Sem o encadeamento de construtores, cada construtor em Java deve implementar completamente a lógica de inicialização, levando a duplicação de
código e dificultando a manutenção. O encadeamento de construtores centraliza a inicialização em um local, reduzindo a duplicação e facilitando
alterações futuras, tornando o código mais limpo e fácil de gerenciar.

-- ----- ----- -----
10.06. Diagrama de classes - construtores

Mostrou como monta um construtor no diagrama de classes de UML

-- ----- ----- -----
10.07. Desafio de construtores


10.08. Modificador final em variáveis de instância

O modificador final em Java é usado para declarar constantes, ou seja, valores que não devem mudar após a sua inicialização. Quando você aplica
o modificador final a uma variável de instância em uma classe, está indicando que uma vez que essa variável tenha sido atribuída um valor, ela
não pode ser alterada.

10.09. Organizando as classes em pacotes















